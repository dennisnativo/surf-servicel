name: CI-CD

on: 
  workflow_dispatch:
  push: 
    branches: ["master"]
                     
env:
  HELM_CHART_NAME: default/default
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONFIG_REPOSITORY_BASE_URL: https://gitfront.io/r/gitpagtel/uXRffGhPGKAD
  HELM_NAME: servicel-microservice
  PROJECT_GROUP: surf  
    
jobs:  
  Build-production:    
    runs-on: ubuntu-latest    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    # Build
    - name: Login to github registry
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker Metadata action 
      id: docker_meta
      uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96
      with: 
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{github.run_number}}   

    - name: QEMU          
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest

    - name: Build and push Docker images
      uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3
      with:
        context: .
        platforms: linux/x86_64
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}      
  
  Deploy-production:        
        needs: [ Build-production ]
        runs-on: ubuntu-latest        
        container:
         image:  ghcr.io/pagtel-devops/docker-imagens:sha-871580b
        steps:

        - name: Checkout Repository
          uses: actions/checkout@v3

        - run: |
            mkdir -p $HOME/.kube
            echo ${{ secrets.K8S }} kube.pagtel.com.br >> /etc/hosts
            echo ${{ secrets.K8S_LAB_CLUSTER_CONFIG1 }} | base64 --decode > $HOME/.kube/config
            chown $(id -u):$(id -g) $HOME/.kube/config
            helm repo add default https://pagtel-devops.github.io/charts-repository/default
            helm repo update  
            export TAG=$( echo $steps.docker_meta.outputs.tags )
            echo 'Deploy of TAG:' $TAG
            kubectl apply -n surf-production -f $CONFIG_REPOSITORY_BASE_URL/k8s-enviroment-production/raw/$PROJECT_GROUP/$HELM_NAME/config-map.yaml
            helm upgrade -n surf-production  $PROJECT_GROUP-$HELM_NAME $HELM_CHART_NAME --set image.tag=${{github.run_number}}  --values ./helm/production-values.yaml --install   
